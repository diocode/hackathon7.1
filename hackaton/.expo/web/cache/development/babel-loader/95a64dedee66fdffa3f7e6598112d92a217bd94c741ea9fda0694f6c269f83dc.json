{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar API_URL = process.env.AWS_API_GATEWAY_URL || 'http://localhost:3000/api';\nvar DatabaseService = function () {\n  function DatabaseService() {\n    _classCallCheck(this, DatabaseService);\n  }\n  return _createClass(DatabaseService, [{\n    key: \"makeRequest\",\n    value: function () {\n      var _makeRequest = _asyncToGenerator(function* (endpoint) {\n        var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n        var body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        try {\n          var response = yield fetch(`${API_URL}${endpoint}`, {\n            method: method,\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: body ? JSON.stringify(body) : null\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return yield response.json();\n        } catch (error) {\n          console.error('API request failed:', error);\n          throw error;\n        }\n      });\n      function makeRequest(_x) {\n        return _makeRequest.apply(this, arguments);\n      }\n      return makeRequest;\n    }()\n  }, {\n    key: \"createUser\",\n    value: function () {\n      var _createUser = _asyncToGenerator(function* (email, password) {\n        return this.makeRequest('/users', 'POST', {\n          email: email,\n          password: password\n        });\n      });\n      function createUser(_x2, _x3) {\n        return _createUser.apply(this, arguments);\n      }\n      return createUser;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator(function* (email, password) {\n        return this.makeRequest('/users/login', 'POST', {\n          email: email,\n          password: password\n        });\n      });\n      function getUser(_x4, _x5) {\n        return _getUser.apply(this, arguments);\n      }\n      return getUser;\n    }()\n  }, {\n    key: \"addToWatchlist\",\n    value: function () {\n      var _addToWatchlist = _asyncToGenerator(function* (userId, movie) {\n        return this.makeRequest('/watchlist', 'POST', {\n          userId: userId,\n          movie: movie\n        });\n      });\n      function addToWatchlist(_x6, _x7) {\n        return _addToWatchlist.apply(this, arguments);\n      }\n      return addToWatchlist;\n    }()\n  }, {\n    key: \"getWatchlist\",\n    value: function () {\n      var _getWatchlist = _asyncToGenerator(function* (userId) {\n        return this.makeRequest(`/watchlist/${userId}`);\n      });\n      function getWatchlist(_x8) {\n        return _getWatchlist.apply(this, arguments);\n      }\n      return getWatchlist;\n    }()\n  }, {\n    key: \"removeFromWatchlist\",\n    value: function () {\n      var _removeFromWatchlist = _asyncToGenerator(function* (userId, movieId) {\n        return this.makeRequest(`/watchlist/${userId}/${movieId}`, 'DELETE');\n      });\n      function removeFromWatchlist(_x9, _x10) {\n        return _removeFromWatchlist.apply(this, arguments);\n      }\n      return removeFromWatchlist;\n    }()\n  }, {\n    key: \"addUserPreference\",\n    value: function () {\n      var _addUserPreference = _asyncToGenerator(function* (userId, movie) {\n        return this.makeRequest('/preferences', 'POST', {\n          userId: userId,\n          movie: movie\n        });\n      });\n      function addUserPreference(_x11, _x12) {\n        return _addUserPreference.apply(this, arguments);\n      }\n      return addUserPreference;\n    }()\n  }, {\n    key: \"getUserPreferences\",\n    value: function () {\n      var _getUserPreferences = _asyncToGenerator(function* (userId) {\n        return this.makeRequest(`/preferences/${userId}`);\n      });\n      function getUserPreferences(_x13) {\n        return _getUserPreferences.apply(this, arguments);\n      }\n      return getUserPreferences;\n    }()\n  }]);\n}();\nexport default new DatabaseService();","map":{"version":3,"names":["API_URL","process","env","AWS_API_GATEWAY_URL","DatabaseService","_classCallCheck","_createClass","key","value","_makeRequest","_asyncToGenerator","endpoint","method","arguments","length","undefined","body","response","fetch","headers","JSON","stringify","ok","Error","status","json","error","console","makeRequest","_x","apply","_createUser","email","password","createUser","_x2","_x3","_getUser","getUser","_x4","_x5","_addToWatchlist","userId","movie","addToWatchlist","_x6","_x7","_getWatchlist","getWatchlist","_x8","_removeFromWatchlist","movieId","removeFromWatchlist","_x9","_x10","_addUserPreference","addUserPreference","_x11","_x12","_getUserPreferences","getUserPreferences","_x13"],"sources":["/home/patz/hackathon7.1/hackaton/app/services/database.js"],"sourcesContent":["import { Platform } from 'react-native';\n\n// For web, we'll use a REST API endpoint\nconst API_URL = process.env.AWS_API_GATEWAY_URL || 'http://localhost:3000/api';\n\nclass DatabaseService {\n  constructor() {\n    // Initialize any necessary state\n  }\n\n  // Helper function to make API calls\n  async makeRequest(endpoint, method = 'GET', body = null) {\n    try {\n      const response = await fetch(`${API_URL}${endpoint}`, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: body ? JSON.stringify(body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // User operations\n  async createUser(email, password) {\n    return this.makeRequest('/users', 'POST', { email, password });\n  }\n\n  async getUser(email, password) {\n    return this.makeRequest('/users/login', 'POST', { email, password });\n  }\n\n  // Watchlist operations\n  async addToWatchlist(userId, movie) {\n    return this.makeRequest('/watchlist', 'POST', { userId, movie });\n  }\n\n  async getWatchlist(userId) {\n    return this.makeRequest(`/watchlist/${userId}`);\n  }\n\n  async removeFromWatchlist(userId, movieId) {\n    return this.makeRequest(`/watchlist/${userId}/${movieId}`, 'DELETE');\n  }\n\n  // User preferences operations\n  async addUserPreference(userId, movie) {\n    return this.makeRequest('/preferences', 'POST', { userId, movie });\n  }\n\n  async getUserPreferences(userId) {\n    return this.makeRequest(`/preferences/${userId}`);\n  }\n}\n\nexport default new DatabaseService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}