{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/patz/hackathon7.1/hackaton/app/screens/LoginScreen.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useAuth = useAuth(),\n    login = _useAuth.login,\n    loading = _useAuth.loading;\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var success = yield login(email, password);\n      if (success) {\n        navigation.replace('MainApp');\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(ImageBackground, {\n    source: require('../assets/background.jpg'),\n    style: styles.background,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"StreamFlix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: styles.form,\n        children: [_jsxDEV(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          value: email,\n          onChangeText: setEmail,\n          autoCapitalize: \"none\",\n          keyboardType: \"email-address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), _jsxDEV(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: handleLogin,\n          disabled: loading,\n          children: loading ? _jsxDEV(ActivityIndicator, {\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this) : _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#E50914',\n    marginBottom: 40\n  },\n  form: {\n    width: '100%',\n    maxWidth: 400\n  },\n  input: {\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    borderRadius: 8,\n    padding: 15,\n    marginBottom: 15,\n    color: '#fff',\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#E50914',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ImageBackground","ActivityIndicator","useAuth","jsxDEV","_jsxDEV","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useAuth","login","loading","handleLogin","_ref2","_asyncToGenerator","success","replace","apply","arguments","source","require","style","styles","background","children","container","title","fileName","_jsxFileName","lineNumber","columnNumber","form","input","placeholder","value","onChangeText","autoCapitalize","keyboardType","secureTextEntry","button","onPress","disabled","color","buttonText","create","flex","width","height","backgroundColor","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","maxWidth","borderRadius","marginTop"],"sources":["/home/patz/hackathon7.1/hackaton/app/screens/LoginScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  ImageBackground,\n  ActivityIndicator,\n} from 'react-native';\nimport { useAuth } from '../context/AuthContext';\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { login, loading } = useAuth();\n\n  const handleLogin = async () => {\n    const success = await login(email, password);\n    if (success) {\n      navigation.replace('MainApp');\n    }\n  };\n\n  return (\n    <ImageBackground\n      source={require('../assets/background.jpg')}\n      style={styles.background}\n    >\n      <View style={styles.container}>\n        <Text style={styles.title}>StreamFlix</Text>\n        <View style={styles.form}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Email\"\n            value={email}\n            onChangeText={setEmail}\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Password\"\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n          />\n          <TouchableOpacity\n            style={styles.button}\n            onPress={handleLogin}\n            disabled={loading}\n          >\n            {loading ? (\n              <ActivityIndicator color=\"#fff\" />\n            ) : (\n              <Text style={styles.buttonText}>Login</Text>\n            )}\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#E50914',\n    marginBottom: 40,\n  },\n  form: {\n    width: '100%',\n    maxWidth: 400,\n  },\n  input: {\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    borderRadius: 8,\n    padding: 15,\n    marginBottom: 15,\n    color: '#fff',\n    fontSize: 16,\n  },\n  button: {\n    backgroundColor: '#E50914',\n    padding: 15,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}